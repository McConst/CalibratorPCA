//Файл инициализации констант
#include <string>

#ifndef CONST_H
#define CONST_H

enum ProcessError
{
	OK,
	FILE_READING_ERROR,		//Ошибка чтения файла
	FILE_SAVING_ERROR,		//Ошибка сохранения файла
	INCORRECT_CALIBRATION_TYPE //Калибровка в файле не подходит для выбранного метода расчетов
};

const std::string InitFile{ "CalibratorPCA.ini" };//Имя файла настроек
const std::string CalculatorInitFile{ "CalculatorPCA.ini" };//Файл настройк для расчета концентраций по данным имеющейся градуировки

const int CRM_ElementCount{ 3 };//Количество аттестованных элементов в стандартном образце, для которых строится градуировка, 3
const int ChannelCount{ 2047 };//Количество спектральных каналов, 2047
const double err_relatDiffStep{ 1e-8 };//Относительная ошибка численного дифференцирования (приращение аргумента)
const double err_relatCompareResult{ 1e-6 };//ошибка для сравнения чисел типа double
const int MaxLambdaIterat{ 50 };//Количество итераций при подборе шага Лямбда. Больше 50 не имеет смысла, так как шаг меняется на 2^50 степени
const char CalibrMethodStringLength = 4;//Количество символов, обозначающее метод калибровки +1 (PLS, PCR - 3 символа)

//Количество итераций по Левенбергу-Марквардту должно быть больше чем итераций PLS, чтобы стимулировать выход из алгоритма
//по точности найденных коэффициентов, иначе может страдать качество итераций при поиске параметров PLS
const int MaxIterationsLevMaq{ 300 };//Максимальное количество итераций при расчетах сходимости функции по Левенбергу-Маквардту
const int MaxPLSRebuildIterat{ 200 };//Максимальное количество итераций при перерасчете параметров PLS для легкой матрицы
const double StartLambda{ 0.01 };//Начальное лямбда для решения уравнений методом Левенберга-Марквардта
#endif // !CONST_H
